name: Deploy to Prod

on:
  workflow_dispatch:
    branches:
      - master

jobs:
  deploy:
    name: Deploy to Prod
    runs-on: ubuntu-latest
    steps:
      - uses: shivammathur/setup-php@b7d1d9c9a92d8d8463ce36d7f60da34d461724f8
        with:
          php-version: "8.0"
      - uses: actions/checkout@v2
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --no-dev
      - name: Setup ssh
        run: |
          mkdir -p ~/.ssh
          echo "${{secrets.PERSONAL_PRIVATE_ID_RSA}}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{secrets.PERSONAL_PRODUCTION_HOST}} > ~/.ssh/known_hosts
          sudo chmod 400 ~/.ssh/id_rsa
      - name: Build assets
        run: |
          sudo npm install -g yarn
          yarn
          yarn prod
      - name: Clean up
        run: |
          rm -fR node_modules
          rm -fR storage
          rm -fR .git
      - name: Tar the project
        run: |
          cd ..
          if [ -f Personal.tar.bz2 ]; then rm -f Personal.tar.bz2; fi
          tar -cjf Personal.tar.bz2 Personal
      - name: Send the project to server
        run: "scp -i ~/.ssh/id_rsa ../Personal.tar.bz2 ubuntu@${{secrets.PERSONAL_PRODUCTION_HOST}}:"
      - name: Unwrap project on server
        run: ssh ubuntu@${{ secrets.PERSONAL_PRODUCTION_HOST }} tar -xf Personal.tar.bz2
      - name: Copy .env from live project
        run: ssh ubuntu@${{ secrets.PERSONAL_PRODUCTION_HOST }} cp /var/www/personal/.env Personal
      - name: Copy stored files from live project
        run: ssh ubuntu@${{ secrets.PERSONAL_PRODUCTION_HOST }} cp -fR /var/www/personal/storage Personal
      - name: Backup current mysql state
        run: ssh ubuntu@${{ secrets.PERSONAL_PRODUCTION_HOST }} sudo -u www-data touch /var/www/personal/storage/personal.sql && sudo mysqldump --user=${{secrets.PERSONAL_MYSQL_USERNAME}} --password=${{secrets.PERSONAL_MYSQL_PASSWORD}} --port=${{secrets.PERSONAL_MYSQL_PORT}} --host=${{secrets.PERSONAL_MYSQL_HOST}} ${{secrets.PERSONAL_MYSQL_DATABASE}} > /var/www/personal/storage/personal.sql
      - name: Zip up running deployment
        run: ssh ubuntu@${{ secrets.PERSONAL_PRODUCTION_HOST }} sudo tar -cjf /tmp/personal.tar.bz2 /var/www/personal
      - name: Put site in maintanence mode
        run: ssh ubuntu@${{ secrets.PERSONAL_PRODUCTION_HOST }} sudo -u www-data php /var/www/personal/artisan down
      - name: Change ownership of files to www-data:www-data
        run: ssh ubuntu@${{ secrets.PERSONAL_PRODUCTION_HOST }} sudo chown -fR www-data:www-data /home/ubuntu/Personal
      - name: Swap out old deployment with new
        run: ssh ubuntu@${{ secrets.PERSONAL_PRODUCTION_HOST }} sudo mv /var/www/personal /tmp && sudo mv /home/ubuntu/Personal /var/www/personal
      - name: Clear caches from storage
        run: |
          ssh ubuntu@${{ secrets.PERSONAL_PRODUCTION_HOST }} "
          sudo -u www-data php /var/www/personal/artisan storage:link
          sudo -u www-data php /var/www/personal/artisan cache:clear
          sudo -u www-data php /var/www/personal/artisan route:clear
          sudo -u www-data php /var/www/personal/artisan config:clear
          sudo -u www-data php /var/www/personal/artisan view:clear"
      - name: Run migrations
        run: ssh ubuntu@${{ secrets.PERSONAL_PRODUCTION_HOST }} yes | sudo -u www-data php /var/www/personal/artisan migrate
      - name: Restart jobs
        run: ssh ubuntu@${{ secrets.PERSONAL_PRODUCTION_HOST }} sudo -u www-data php /var/www/personal/artisan queue:restart
      - name: Bring site out of maintanence mode
        run: ssh ubuntu@${{ secrets.PERSONAL_PRODUCTION_HOST }} sudo -u www-data php /var/www/personal/artisan up
      - name: Cleanup
        run: ssh ubuntu@${{ secrets.PERSONAL_PRODUCTION_HOST }} sudo rm -fR /home/ubuntu/Personal && sudo rm -fR /tmp/personal
